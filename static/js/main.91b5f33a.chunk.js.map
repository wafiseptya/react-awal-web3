{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","a","b","hasil","operator","active","name","color","gambar","menu","setState","e","preventDefault","parseInt","refs","value","console","log","react_default","createElement","className","src","_this$state","param","onSubmit","calculate","bind","type","ref","placeholder","onKeyPress","kalkulator","_this2","id","items","map","index","style","concat","img","onClick","clicked","key","kalkulator2","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.91b5f33a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      a: null,\r\n      b: null,\r\n      hasil: null,\r\n      operator: null,\r\n      active: {\r\n        name: 'Home',\r\n        color: 'red',\r\n        gambar: 'red.png'\r\n      },\r\n    };\r\n  }\r\n\r\n  clicked(menu){\r\n    this.setState({\r\n      active: menu,\r\n    });\r\n  }\r\n  \r\n\r\n  calculate(e){\r\n    e.preventDefault();\r\n\r\n    const a = parseInt(this.refs.a.value);\r\n    const b = parseInt(this.refs.b.value);\r\n    const operator = this.refs.operator.value;\r\n\r\n    var hasil;\r\n    switch (operator) {\r\n      case '+':\r\n        hasil = a+b;\r\n        break;\r\n    \r\n      case '-':\r\n        hasil = a-b;\r\n        break;\r\n    \r\n      case '*':\r\n        hasil = a*b;\r\n        break;\r\n    \r\n      case '/':\r\n        hasil = a/b;\r\n        break;\r\n    }\r\n\r\n    this.setState({ a, b, hasil, operator});\r\n\r\n  }\r\n\r\n  showImage(){\r\n    console.log(this.state.active.gambar);\r\n    return <img className=\"image\" src={this.state.active.gambar}></img>\r\n  }\r\n  \r\n  kalkulator(){\r\n\r\n    const {hasil, a, b, operator} = this.state;\r\n\r\n    if(this.state.hasil) {\r\n      return (\r\n        <div>\r\n          <br/>\r\n          <p className=\"alert alert-success\">\r\n            {a+operator+b+' = '+hasil}\r\n          \r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  kalkulator2(param){\r\n    console.log(param);\r\n    if(param == 'Calculator'){\r\n      \r\n      return(\r\n        \r\n        <div className=\"container\">\r\n\r\n          <span className={this.state.active.color + \" selected mb-5\"}>\r\n            {this.state.active.name}\r\n          </span>\r\n\r\n          <div className=\"row justify-content-center mt-3\">\r\n            <div className=\"col-md-8\">\r\n            <form onSubmit={this.calculate.bind(this)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 p-0\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"number\" ref=\"a\" className=\"form-control\" placeholder=\"input 1\"></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-1 p-0\">\r\n                <div className=\"input-group\">\r\n                  <select type=\"number\" ref=\"operator\" className=\"form-control\" placeholder=\"input 1\">\r\n                    <option value=\"+\">+</option>\r\n                    <option value=\"-\">+</option>\r\n                    <option value=\"*\">x</option>\r\n                    <option value=\"/\">/</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-4 p-0\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"number\" ref=\"b\" className=\"form-control\" placeholder=\"input 2\"></input>\r\n                </div>\r\n              </div>\r\n              <button className=\"col-md-3 btn btn-primary\" onKeyPress={this.kalkulator()}>Pencet Gan</button>\r\n            </div>\r\n            </form>\r\n              {this.kalkulator()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      );\r\n      \r\n    }else {\r\n      return(\r\n        <div>\r\n          ini adalah <span className={this.state.active.color + \" selected\"}>\r\n            {this.state.active.name}\r\n          </span>\r\n          <img className=\"image\" src={this.state.active.gambar}></img>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        {/* map akan loop sebanyak menu yang didefinisikan */}\r\n        {/* kemudian mengembalikan elemen <a/> */}\r\n        <nav className=\"nav\">{this.props.items.map((menu, index) => {\r\n          var style = 'menu';\r\n\r\n          if (this.state.active.name === menu.name) {\r\n            style = `${style} ${menu.color} is-activate`;\r\n            \r\n            console.log(menu.name);\r\n            console.log(this.state.active.img);\r\n          }\r\n          return(\r\n            <a className={style}\r\n            // bind untuk membuat 'menu' bisa dikirim ke fungsi 'clicked'\r\n            onClick={\r\n              this.clicked.bind(this, menu)\r\n            }\r\n            key={index}\r\n            >\r\n              {menu.name}\r\n            </a>\r\n          );\r\n        })}\r\n        </nav>\r\n\r\n        <div className=\"info\">\r\n        \r\n          {this.kalkulator2(this.state.active.name)}\r\n          \r\n        </div>\r\n        {/* {this.showImage()} */}\r\n\r\n        \r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './web.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst items = [\r\n    {\r\n        name: 'Home',\r\n        color: 'red',\r\n        gambar: 'red.png'\r\n    },\r\n\r\n    {\r\n        name: 'Tab 2',\r\n        color: 'yellow',\r\n        gambar: 'yellow.png'\r\n    },\r\n\r\n    {\r\n        name: 'Tab 3',\r\n        color: 'green',\r\n        gambar: 'green.png'\r\n    },\r\n\r\n    {\r\n        name: 'Calculator',\r\n        color: 'blue',\r\n        gambar: 'blue.png'\r\n    },\r\n];\r\n\r\nReactDOM.render(<App items={items} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}